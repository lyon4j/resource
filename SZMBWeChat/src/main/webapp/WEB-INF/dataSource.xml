<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
	
	<!--引入jdbc配置文件--> 
	<context:property-placeholder location="classpath:databaseConfig.properties" ignore-unresolvable="true"/> 	
	<!-- 使用Druid连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" /> 
		<property name="password" value="${jdbc.password}" />
		<!-- 配置初始化大小、最小、最大 --> 
		<property name="initialSize" value="${initialSize}" />
		<property name="minIdle" value="${minIdle}" />
		<property name="maxActive" value="${maxActive}" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${maxWait}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
       	<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />
        <property name="validationQuery" value="${validationQuery}" />
        <property name="testWhileIdle" value="${testWhileIdle}" />
        <property name="testOnBorrow" value="${testOnBorrow}" />
        <property name="testOnReturn" value="${testOnReturn}" />
       <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="${poolPreparedStatements}" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="${maxPoolPreparedStatementPerConnectionSize}" />
        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="${filters}" />
	</bean>
	
	<!-- 创建SqlSessionFactory，同时指定数据源-->  
     <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">   
     	<property name="dataSource" ref="dataSource" />  
		<property name="mapperLocations" value="classpath:com/lyon4j/mapper/*Mapper.xml"/>  
     	<property name="typeAliasesPackage" value="com.lyon4j.pojo" />
     </bean>
     	
  	<!-- mybatis 映射 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
       <property name="basePackage" value="com.yama.dao" />  
       <property name="sqlSessionFactoryBeanName" value="sqlSessionFacotry"></property>
    </bean>      	
     	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource"> 
			<ref bean="dataSource" /> 
		</property> 
	</bean> 
	
	<tx:annotation-driven transaction-manager="transactionManager" /> 
	<aop:config> 
	<aop:pointcut expression="execution(* com.lyon4j.service..*.*(..))" id="productServiceMethods" /> 
	<aop:advisor advice-ref="txAdvice" pointcut-ref="productServiceMethods" /> 
	</aop:config> 
	<tx:advice id="txAdvice" transaction-manager="transactionManager"> 
	<tx:attributes> 
		<tx:method name="save*" propagation="REQUIRED" /> 
		<tx:method name="add*" propagation="REQUIRED"/>
		<tx:method name="delete*" propagation="REQUIRED" /> 
		<tx:method name="modify*" propagation="REQUIRED" /> 
		<tx:method name="insert*" propagation="REQUIRED" /> 
		<tx:method name="remove*" propagation="REQUIRED" /> 
		<tx:method name="update*" propagation="REQUIRED" /> 
		<tx:method name="find*" propagation="REQUIRED" read-only="true" /> 
		<tx:method name="get*" propagation="REQUIRED" read-only="true" /> 
	</tx:attributes> 
	</tx:advice> 	
	
</beans>